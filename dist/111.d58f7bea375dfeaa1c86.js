(self.webpackChunkapp_react=self.webpackChunkapp_react||[]).push([[111],{6398:function(e,r,n){"use strict";n.d(r,{Z:function(){return m}});var i=n(6010),s=n(5697),t=n.n(s),a=n(3942),o=n(5893),c=function(e){var r=e.className,n=e.width,i=e.height;return(0,o.jsxs)("svg",{className:r,width:n,height:i,xmlns:"http://www.w3.org/2000/svg",xmlnsXlink:"http://www.w3.org/1999/xlink",children:[(0,o.jsx)("symbol",{id:"icon-bookmark",viewBox:"0 0 17 18",children:(0,o.jsx)("path",{d:"M3.993 2.185l.017-.092V2c0-.554.449-1 .99-1h10c.522 0 .957.41.997.923l-2.736 14.59-4.814-2.407-.39-.195-.408.153L1.31 16.44 3.993 2.185z"})}),(0,o.jsx)("use",{href:"#icon-bookmark"})]})};c.propTypes={className:t().string,width:t().number,height:t().number};var u=c,d=n(2336),f=n(5506),l=n(3886),p=n(8404),h=function(e){var r,n,s,t=e.offerId,c=e.bookmarkType,l=(0,a.v9)(d.G4),h=(0,a.v9)(f.Od),m=(0,a.I0)(),x=!!l.length&&l.includes(t),g=x?p.O9.IN_BOOKMARKS:p.O9.TO_BOOKMARKS,v=h?p.Bx.NONE:p.Bx.LOGIN;return(0,o.jsxs)("button",{className:(0,i.Z)("bookmark-button",p.ot[c].btn,(r={},n=p.ot[c].btnActive,s=h&&x,n in r?Object.defineProperty(r,n,{value:s,enumerable:!0,configurable:!0,writable:!0}):r[n]=s,r)),"data-modal":v,title:g,type:"button",onClick:function(){h&&m((0,d.VO)(t))},children:[(0,o.jsx)(u,{className:p.ot[c].icon,width:p.lS[c].width,height:p.lS[c].height}),(0,o.jsx)("span",{className:"visually-hidden",children:g})]})};h.propTypes={offerId:l.x6,bookmarkType:t().string.isRequired};var m=h},2389:function(e,r,n){"use strict";n.d(r,{Z:function(){return f}});var i=n(5697),s=n.n(i),t=n(8404),a=n(5893),o=function(e){var r=e.offerType;return(0,a.jsx)("li",{className:"".concat(t.pp[r].li," mb-3"),children:(0,a.jsx)("article",{className:"card border-light text-start",children:(0,a.jsxs)("div",{className:"".concat(t.pp[r].container," d-flex"),children:[(0,a.jsx)("div",{children:(0,a.jsx)("div",{className:"bg-secondary rounded placeholder",style:{width:"".concat(t.YS[r].width,"px"),height:"".concat(t.YS[r].height,"px")}})}),(0,a.jsxs)("div",{className:"".concat(t.pp[r].info," card-body py-1"),children:[(0,a.jsx)("div",{className:"card-text mb-1 placeholder-glow",children:(0,a.jsx)("span",{className:"col-5 bg-secondary fs-5-4 placeholder"})}),(0,a.jsx)("div",{className:"card-text mb-1 placeholder-glow",children:(0,a.jsx)("span",{className:"col-4 bg-secondary fs-5-4 placeholder"})}),(0,a.jsx)("h6",{className:"card-title mb-1 placeholder-glow",children:(0,a.jsx)("span",{className:"col-8 bg-secondary placeholder fs-5-3"})}),(0,a.jsx)("p",{className:"card-text placeholder-glow",children:(0,a.jsx)("small",{className:"col-4 bg-secondary fs-6-2 placeholder"})})]})]})})})};o.propTypes={offerType:s().string.isRequired};var c=o,u=n(3886),d=function(e){var r=e.offers,n=e.offerType;return(0,a.jsx)("ul",{className:"row row-cols-1 g-0 pt-1 px-3 justify-content-around list-unstyled","aria-hidden":"true",children:r.map((function(e,r){return(0,a.jsx)(c,{offerType:n},r)}))})};d.propTypes={offers:u.Hp,offerType:s().string.isRequired};var f=d},5236:function(e,r,n){"use strict";n.d(r,{Z:function(){return j}});var i=n(7294),s=n(5697),t=n.n(s),a=n(6010),o=n(9711),c=n(3942),u=n(8404),d=n(5893),f=function(e){var r=e.offerImage,n=e.offerLink,i=e.offerType;return(0,d.jsx)(o.OL,{className:"d-flex justify-content-center align-items-center text-center",to:n,children:(0,d.jsx)("img",{className:"rounded",alt:u.HH.PLACE_IMAGE,width:u.YS[i].width,height:u.YS[i].height,src:r,loading:"lazy"})})};f.propTypes={offerImage:t().string.isRequired,offerLink:t().string.isRequired,offerType:t().string.isRequired};var l=f,p=n(6398),h=n(4453),m=n(1265),x=n(3886),g=function(e){var r=e.offer,n=e.offerType,i=e.handleOfferCardMouseEnter,s=void 0===i?function(){return!1}:i,t=e.handleOfferCardMouseLeave,f=void 0===t?function(){return!1}:t,x=r.id,g="".concat(u.$w.OFFER,"?id=").concat(x),v=(0,c.v9)(m.k4);return(0,d.jsx)("li",{className:(0,a.Z)("".concat(u.pp[n].li," pb-3 app-hover-opacity"),{"app-opacity":v===x}),onMouseEnter:s,onMouseLeave:f,children:(0,d.jsx)("article",{className:"card border-light text-start",children:(0,d.jsxs)("div",{className:"".concat(u.pp[n].container," d-flex"),children:[(0,d.jsx)("div",{children:(0,d.jsxs)("div",{className:"position-relative bg-light rounded",children:[r.wifi&&(0,d.jsx)("span",{className:"position-absolute top-0 start-0 badge bg-primary app-skewed-neg-15 offer-card-badge",children:(0,d.jsx)("span",{children:u.HH.FREE_WI_FI})}),(0,d.jsx)(l,{offerImage:r.image,offerLink:g,offerType:n})]})}),(0,d.jsxs)("div",{className:"".concat(u.pp[n].info," card-body py-1"),children:[(0,d.jsxs)("div",{className:"d-flex align-items-center card-text mb-1",children:[(0,d.jsxs)("b",{className:"fs-5-4",children:[u.wA," ",r.price]}),(0,d.jsxs)("span",{className:"fs-6-3",children:[" ",u.aZ]}),(0,d.jsx)(p.Z,{offerId:x,bookmarkType:u.R_.MAIN})]}),(0,d.jsx)("div",{className:"card-text mb-1",children:(0,d.jsx)(h.Z,{rating:r.rating,ratingType:u.bH.CARD})}),(0,d.jsx)("h6",{className:"card-title mb-1",children:(0,d.jsx)(o.OL,{className:"text-dark text-decoration-none app-hover-opacity app-trasition app-subtitle fs-5-3",to:g,children:r.title})}),(0,d.jsx)("p",{className:"card-text",children:(0,d.jsx)("small",{className:"text-muted fs-6-2",children:r.type})})]})]})})})};g.propTypes={offer:x.ce,offerType:t().string.isRequired,handleOfferCardMouseEnter:t().func,handleOfferCardMouseLeave:t().func};var v=g,y=(0,i.forwardRef)((function(e,r){var n=e.offers,i=e.offerType,s=e.handleOfferCardMouseEnter,t=void 0===s?function(){return!1}:s,a=e.handleOfferCardMouseLeave,o=void 0===a?function(){return!1}:a;return(0,d.jsx)("ul",{ref:r,className:"row row-cols-1 g-0 justify-content-around list-unstyled",children:n.map((function(e){return(0,d.jsx)(v,{offer:e,offerType:i,handleOfferCardMouseEnter:function(){return t(e)},handleOfferCardMouseLeave:o},e.id)}))})}));y.propTypes={offers:x.N0,offerType:t().string.isRequired,handleOfferCardMouseEnter:t().func,handleOfferCardMouseLeave:t().func};var j=y},4453:function(e,r,n){"use strict";var i=n(5697),s=n.n(i),t=n(8404),a=n(6948),o=n(5893),c=function(e){var r=e.rating,n=e.ratingType,i=e.showValue,s=void 0!==i&&i;return(0,o.jsxs)("div",{className:"".concat(t.oQ[n].rating," rating"),children:[(0,o.jsxs)("div",{className:"".concat(t.oQ[n].stars," rating-stars"),children:[(0,o.jsx)("span",{style:{width:"".concat((0,a.zU)(r),"%")}}),(0,o.jsx)("span",{className:"visually-hidden",children:t.gI.RATING})]}),s&&(0,o.jsxs)("span",{className:"".concat(t.oQ[n].value),children:[" ",r]})]})};c.propTypes={rating:s().number.isRequired,ratingType:s().string.isRequired,showValue:s().bool},r.Z=c},2111:function(e,r,n){"use strict";n.r(r),n.d(r,{default:function(){return k}});var i=n(8446),s=n.n(i),t=n(7294),a=n(3942),o=n(5697),c=n.n(o),u=n(9711),d=n(5236),f=n(8404),l=n(3886),p=n(6948),h=function(e){return Array.from(e.keys())},m=function(e,r){return e.get(r)[0].city.name},x=function(e,r){return e.get(r)},g=n(5893),v=function(e){var r=e.offersMapByCity;return(0,g.jsx)("ul",{className:"d-flex flex-column align-items-center list-unstyled",children:h(r).map((function(e){return(0,g.jsxs)("li",{className:"d-flex",children:[(0,g.jsx)("div",{className:"favorites-link-container",children:(0,g.jsx)("div",{children:(0,g.jsx)(u.rU,{className:"btn btn-primary app-skewed-neg-15 fs-5-3 favorites-link",to:(0,p.bZ)(e),children:(0,g.jsx)("span",{children:m(r,e)})})})}),(0,g.jsx)("div",{className:"favorites-offers-container",children:(0,g.jsx)(d.Z,{offers:x(r,e),offerType:f.Hg.FAVORITE})})]},e)}))})};v.propTypes={offersMapByCity:l.g_};var y=v,j=n(2389),b=function(e){var r=e.offerType,n=(0,p.x0)(3);return(0,g.jsx)("ul",{className:"d-flex flex-column align-items-center list-unstyled placeholder-glow","aria-hidden":"true",children:(0,g.jsxs)("li",{className:"d-flex",children:[(0,g.jsx)("div",{className:"favorites-link-container",children:(0,g.jsx)("div",{children:(0,g.jsx)("a",{className:"col-6 btn btn-primary app-skewed-neg-15 fs-5-3 disabled placeholder favorites-link",tabIndex:"-1"})})}),(0,g.jsx)("div",{className:"favorites-offers-container",children:(0,g.jsx)(j.Z,{offers:n,offerType:r})})]})})};b.propTypes={offerType:c().string.isRequired};var N=b,R=n(5578),q=n.n(R),O=function(e){var r,n,i,s=e.isLoaded,t=e.favoriteOffers;if(s){if(t&&t.length){var a=(r=t,n=new Map,i=function(e){return q()(e,"city.id").map((function(e){return e.city})).sort()}(r),i.forEach((function(e){n.set(e.id,[])})),r.forEach((function(e){n.get(e.city.id).push(e)})),n.forEach((function(e,r,n){e.length||n.delete(r)})),n);return(0,g.jsx)(y,{offersMapByCity:a})}return(0,g.jsx)("h2",{className:"app-subtitle",children:f.yP.NOTHING_SAVED_YET})}return(0,g.jsx)(N,{offerType:f.Hg.FAVORITE})};O.propTypes={isLoaded:c().bool.isRequired,favoriteOffers:(0,l.sN)(l.N0)};var w=O,T=n(2336),k=function(){var e=(0,a.I0)(),r=(0,a.v9)(T._l,s()),n=(0,a.v9)(T.Zl);return(0,t.useEffect)((function(){e((0,T.OT)())}),[e]),(0,g.jsxs)("section",{className:"page-content-wrapper",children:[(0,g.jsx)("h1",{className:"app-title page-content-title",children:f.yP.SAVED_LISTING}),(0,g.jsx)(w,{isLoaded:n,favoriteOffers:r})]})}},3886:function(e,r,n){"use strict";n.d(r,{Y1:function(){return d},zP:function(){return u},Hp:function(){return t},sN:function(){return a},x6:function(){return f},ce:function(){return l},g_:function(){return h},F9:function(){return x},N0:function(){return p},SA:function(){return o},qd:function(){return y},zK:function(){return j}});var i=n(5697),s=n.n(i),t=s().arrayOf(s().oneOf([void 0])).isRequired,a=function(e){return s().oneOfType([e,s().oneOf([null]).isRequired])},o=s().oneOfType([s().func.isRequired,s().shape({current:s().any}).isRequired]),c=s().oneOfType([s().shape({}).isRequired,s().shape({coordinates:s().arrayOf(s().number).isRequired,id:s().string.isRequired,name:s().string.isRequired,zoom:s().number.isRequired}).isRequired]),u=s().arrayOf(c).isRequired,d={handleClose:s().func,isOpen:s().bool},f=s().number.isRequired,l=s().shape({bedrooms:s().number.isRequired,city:s().shape({id:s().string.isRequired,name:s().string.isRequired}).isRequired,coordinates:s().arrayOf(s().number).isRequired,id:f,image:s().string.isRequired,photos:s().arrayOf(s().string).isRequired,price:s().number.isRequired,rating:s().number.isRequired,title:s().string.isRequired,type:s().string.isRequired,wifi:s().bool.isRequired,zoom:s().number.isRequired}).isRequired,p=s().arrayOf(l).isRequired,h=a(s().instanceOf(Map).isRequired),m=s().shape({city:s().shape({id:s().string.isRequired}).isRequired,coordinates:s().arrayOf(s().number).isRequired,id:f,price:s().number.isRequired,rating:s().number.isRequired,title:s().string.isRequired,type:s().string.isRequired}).isRequired,x=s().arrayOf(m).isRequired,g=n(9599),v=n(2902),y=s().shape({avatar:s().string.isRequired,comment:s().string.isRequired,date:function(e,r,n){return(0,g.Z)((0,v.Z)(e[r]))?null:new Error("Invalid prop `".concat(r,"` supplied to `").concat(n,"`. Validation failed."))},id:s().number.isRequired,name:s().string.isRequired,offerId:s().number.isRequired,rating:s().number.isRequired,userId:s().number.isRequired}).isRequired,j=s().arrayOf(y).isRequired},7443:function(e,r,n){var i=n(2118);e.exports=function(e,r){return!(null==e||!e.length)&&i(e,r,0)>-1}},1196:function(e){e.exports=function(e,r,n){for(var i=-1,s=null==e?0:e.length;++i<s;)if(n(r,e[i]))return!0;return!1}},1848:function(e){e.exports=function(e,r,n,i){for(var s=e.length,t=n+(i?1:-1);i?t--:++t<s;)if(r(e[t],t,e))return t;return-1}},2118:function(e,r,n){var i=n(1848),s=n(2722),t=n(2351);e.exports=function(e,r,n){return r==r?t(e,r,n):i(e,s,n)}},2722:function(e){e.exports=function(e){return e!=e}},5652:function(e,r,n){var i=n(8668),s=n(7443),t=n(1196),a=n(4757),o=n(3593),c=n(1814);e.exports=function(e,r,n){var u=-1,d=s,f=e.length,l=!0,p=[],h=p;if(n)l=!1,d=t;else if(f>=200){var m=r?null:o(e);if(m)return c(m);l=!1,d=a,h=new i}else h=r?[]:p;e:for(;++u<f;){var x=e[u],g=r?r(x):x;if(x=n||0!==x?x:0,l&&g==g){for(var v=h.length;v--;)if(h[v]===g)continue e;r&&h.push(g),p.push(x)}else d(h,g,n)||(h!==p&&h.push(g),p.push(x))}return p}},3593:function(e,r,n){var i=n(8525),s=n(308),t=n(1814),a=i&&1/t(new i([,-0]))[1]==1/0?function(e){return new i(e)}:s;e.exports=a},2351:function(e){e.exports=function(e,r,n){for(var i=n-1,s=e.length;++i<s;)if(e[i]===r)return i;return-1}},8446:function(e,r,n){var i=n(939);e.exports=function(e,r){return i(e,r)}},308:function(e){e.exports=function(){}},5578:function(e,r,n){var i=n(7206),s=n(5652);e.exports=function(e,r){return e&&e.length?s(e,i(r,2)):[]}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,